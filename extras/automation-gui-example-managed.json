{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "5131044048092922614"
    }
  },
  "parameters": {
    "staticWebAppRegion": {
      "type": "string",
      "allowedValues": [
        "eastus2",
        "centralus",
        "westus2",
        "westeurope",
        "eastasia"
      ],
      "metadata": {
        "description": "Region for the Static Web App (SWA Managed Function supported regions), other resources will deploy to the same region as the target resource group."
      }
    },
    "deploymentScriptIdentityName": {
      "type": "string",
      "defaultValue": "id-automation-gui-example-deploy",
      "metadata": {
        "description": "Name of the Managed Identity created in the pre-deploy steps."
      }
    },
    "appRegistrationName": {
      "type": "string",
      "defaultValue": "automation-gui-example",
      "metadata": {
        "description": "Name for the App Registration created during deployment."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('stautoguiexample{0}', substring(uniqueString(resourceGroup().id), 0, 5))]",
      "metadata": {
        "description": "Name for the Storage Account resource."
      }
    },
    "automationAccountName": {
      "type": "string",
      "defaultValue": "aa-automation-gui-example",
      "metadata": {
        "description": "Name for the Automation Account resource."
      }
    },
    "runbookWebhookExpiryTime": {
      "type": "string",
      "defaultValue": "[dateTimeAdd(utcNow('u'), 'P1Y')]",
      "metadata": {
        "description": "DO NOT CHANGE. Expiry time (now +1 year) for the Runbook web hooks used by the Static Web App API."
      }
    },
    "staticWebAppName": {
      "type": "string",
      "defaultValue": "stapp-automation-gui-example",
      "metadata": {
        "description": "Name for the Static Web App resource."
      }
    },
    "githubRepositoryURL": {
      "type": "string",
      "metadata": {
        "description": "URL for the Github respository used for deployment."
      }
    }
  },
  "variables": {
    "appRegistraionNameArgument": "[format('\"{0}\"', parameters('appRegistrationName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'formData')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/hybridRunbookWorkerGroups",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('automationAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}/{1}', parameters('automationAccountName'), 'automation-gui-example')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "runbookType": "PowerShell",
        "description": "",
        "publishContentLink": {
          "uri": "https://raw.githubusercontent.com/chrisred/az-automation-gui-example/master/extras/RunbookExample.ps1",
          "version": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/webhooks",
      "apiVersion": "2015-10-31",
      "name": "[format('{0}/{1}', parameters('automationAccountName'), 'automation-gui-example-api')]",
      "properties": {
        "expiryTime": "[parameters('runbookWebhookExpiryTime')]",
        "isEnabled": true,
        "parameters": {},
        "runbook": {
          "name": "automation-gui-example"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]",
        "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('automationAccountName'), 'automation-gui-example')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}/{1}', parameters('automationAccountName'), 'automation-gui-example-hybrid')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "runbookType": "PowerShell",
        "description": "",
        "publishContentLink": {
          "uri": "https://raw.githubusercontent.com/chrisred/az-automation-gui-example/master/extras/HybridExample.ps1",
          "version": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/webhooks",
      "apiVersion": "2015-10-31",
      "name": "[format('{0}/{1}', parameters('automationAccountName'), 'automation-gui-example-hybrid-api')]",
      "properties": {
        "expiryTime": "[parameters('runbookWebhookExpiryTime')]",
        "isEnabled": true,
        "parameters": {},
        "runbook": {
          "name": "automation-gui-example-hybrid"
        },
        "runOn": "[parameters('automationAccountName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]",
        "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('automationAccountName'), 'automation-gui-example-hybrid')]"
      ]
    },
    {
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}/{1}', parameters('automationAccountName'), 'automation-gui-example-sync')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "runbookType": "PowerShell",
        "description": "",
        "publishContentLink": {
          "uri": "https://raw.githubusercontent.com/chrisred/az-automation-gui-example/master/extras/HybridSyncJob.ps1",
          "version": "1.0.0.0"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/staticSites/config",
      "apiVersion": "2024-04-01",
      "name": "[format('{0}/{1}', parameters('staticWebAppName'), 'appsettings')]",
      "kind": "string",
      "properties": {
        "AUTOMATION_ACCOUNT_NAME": "[parameters('automationAccountName')]",
        "AUTOMATION_GROUP_NAME": "[resourceGroup().name]",
        "AZURE_CLIENT_ID": "[reference(resourceId('Microsoft.Resources/deploymentScripts', 'automation-gui-deploy-script'), '2023-08-01').outputs.ClientId]",
        "AZURE_CLIENT_SECRET": "[reference(resourceId('Microsoft.Resources/deploymentScripts', 'automation-gui-deploy-script'), '2023-08-01').outputs.ClientSecret]",
        "AZURE_SUBSCRIPTION_ID": "[subscription().subscriptionId]",
        "AZURE_TENANT_ID": "[subscription().tenantId]",
        "WEBHOOK_RUNBOOK": "[reference('automation-gui-example-api').uri]",
        "WEBHOOK_HYBRID": "[reference('automation-gui-example-hybrid-api').uri]",
        "STORAGE_CONNECTION_STRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(parameters('storageAccountName'), '2024-01-01').keys[0].value)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts/webhooks', parameters('automationAccountName'), 'automation-gui-example-hybrid-api')]",
        "[resourceId('Microsoft.Automation/automationAccounts/webhooks', parameters('automationAccountName'), 'automation-gui-example-api')]",
        "[resourceId('Microsoft.Resources/deploymentScripts', 'automation-gui-deploy-script')]",
        "[resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2023-08-01",
      "name": "automation-gui-deploy-script",
      "location": "[resourceGroup().location]",
      "kind": "AzurePowerShell",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('deploymentScriptIdentityName')))]": {}
        }
      },
      "properties": {
        "forceUpdateTag": "1",
        "azPowerShellVersion": "12.5.0",
        "scriptContent": "param([string] $Name); Connect-AzAccount -Identity; $Sp = New-AzADServicePrincipal -DisplayName $Name; $DeploymentScriptOutputs = @{'PrincipalId' = $Sp.Id; 'ClientId' = $Sp.AppId; 'ClientSecret' = $Sp.PasswordCredentials.SecretText};",
        "arguments": "[format('-Name {0}', variables('appRegistraionNameArgument'))]",
        "timeout": "PT1H",
        "cleanupPreference": "OnSuccess",
        "retentionInterval": "P1D"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Automation/automationAccounts/{0}', parameters('automationAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName')), resourceId('Microsoft.Resources/deploymentScripts', 'automation-gui-deploy-script'), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "principalId": "[reference(resourceId('Microsoft.Resources/deploymentScripts', 'automation-gui-deploy-script'), '2023-08-01').outputs.PrincipalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]",
        "[resourceId('Microsoft.Resources/deploymentScripts', 'automation-gui-deploy-script')]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName')), subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c12c1c16-33a1-487b-954d-41c89c60f349'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c12c1c16-33a1-487b-954d-41c89c60f349')]",
        "principalId": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName')), '2023-11-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2024-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.Automation/automationAccounts",
      "apiVersion": "2023-11-01",
      "name": "[parameters('automationAccountName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "sku": {
          "name": "Basic"
        }
      }
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2024-04-01",
      "name": "[parameters('staticWebAppName')]",
      "location": "[parameters('staticWebAppRegion')]",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "repositoryUrl": "[parameters('githubRepositoryURL')]",
        "branch": "master",
        "stagingEnvironmentPolicy": "Enabled",
        "allowConfigFileUpdates": true,
        "provider": "GitHub",
        "enterpriseGradeCdnStatus": "Disabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deploymentScripts', 'automation-gui-deploy-script')]"
      ]
    }
  ]
}